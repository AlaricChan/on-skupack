{
    "friendlyName": "Deploy Cisco Nexus 3000 switch",
    "injectableName": "Graph.Switch.CiscoNexus3000.Deploy",
    "options": {
        "deploy-config-and-images": {
            "startupConfig": null,
            "kickstartImage": null,
            "bootImage": null
        }
    },
    "tasks": [
        {
            "label": "deploy-config-and-images",
            "taskDefinition": {
                "friendlyName": "Deploy switch config and images",
                "injectableName": "Task.Inline.Switch.Deploy.Cisco",
                "implementsTask": "Task.Base.Linux.Commands",
                "options": {
                    "startupConfig": null,
                    "startupConfigUri": "{{ api.base }}/templates/{{ options.startupConfig }}",
                    "kickstartImage": null,
                    "bootImage": null,
                    "staticDir": "cisco",
                    "kickstartUri": "{{ api.server }}/{{ options.staticDir }}/{{ options.kickstartImage }}",
                    "bootImageUri": "{{ api.server }}/{{ options.staticDir }}/{{ options.bootImage }}",
                    "commands": [
                        {
                            "downloadUrl": "/api/2.0/templates/cisco-deploy-config-and-images.py"
                        }
                    ]
                },
                "properties": {}
            }
        },
        {
            "label": "catalog-switch-config",
            "taskDefinition": {
                "friendlyName": "Catalog Cisco Switch Config",
                "injectableName": "Task.Inline.Catalog.Switch.Cisco.Config",
                "implementsTask": "Task.Base.Linux.Commands",
                "options": {
                    "commands": [
                        {
                            "downloadUrl": "/api/2.0/templates/cisco-catalog-config.py",
                            "catalog": { "format": "json", "source": "config" }
                        }
                    ]
                },
                "properties": {}
            },
            "waitOn": {
                "deploy-config-and-images": "succeeded"
            }
        }
    ]
}
